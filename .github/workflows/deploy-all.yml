name: Despliegue completo de infraestructura

on:
  push:
    branches: [main]

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio principal
      uses: actions/checkout@v3

    - name: Instalar Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Clonar y empaquetar código de Lambda
      run: |
        git clone https://github.com/wilsonhm21/aws_lambda.git
        cd aws_lambda/lambda
        zip -r ../../lambda.zip .

    - name: Inicializar Terraform
      run: terraform init

    - name: Aplicar Terraform
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Esperar a que el bucket de entrada exista
      run: |
        echo "Esperando a que el bucket esté disponible..."
        for i in {1..10}; do
          aws s3 ls "s3://${{ secrets.INPUT_BUCKET }}" && break
          echo "Bucket aún no disponible. Reintentando..."
          sleep 5
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Subir repuestos.csv al bucket de entrada S3
      run: |
        timestamp=$(date +"%Y%m%d-%H%M")
        filename="repuestos-${timestamp}.csv"
        cp repuestos.csv "$filename"
        aws s3 cp "$filename" s3://${{ secrets.INPUT_BUCKET }}/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Guardar IP EC2 en archivo y subir a S3
      run: |
        IP=$(terraform output -raw ec2_ip_publica)
        echo "$IP" > ec2_ip.txt
        aws s3 cp ec2_ip.txt s3://${{ secrets.OUTPUT_BUCKET }}/shared/ec2_ip.txt
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
